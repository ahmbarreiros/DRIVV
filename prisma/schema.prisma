// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String? @unique
  name String?
  username String?
  image String?
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions Session[]
  accounts Account[]
  comments Comment[]
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  session_token String @unique
  userId String @db.ObjectId
  expires DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  sessionState String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}



model VOD {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  URL String
  server String
  duration String
  champion String
  role String
  patch String
  elo String?
  player String
  result String
  comments Comment[]
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  vodId String @db.ObjectId
  createdAt DateTime?
  isDeleted Boolean
  comment String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  vod VOD @relation(fields: [vodId], references: [id], onDelete: Cascade)
}